package com.example.localizador;

import android.app.ActionBar;
import android.app.Activity;
import android.app.SearchManager;
import android.content.Context;
import android.hardware.Camera;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.view.GravityCompat;
import android.support.v4.view.MenuItemCompat;
import android.support.v4.view.MenuItemCompat.OnActionExpandListener;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.widget.SearchView;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.WindowManager;
import android.widget.ArrayAdapter;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ListView;

import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.MapFragment;
import com.google.android.gms.maps.model.LatLng;

public class MainActivity extends Activity {

	private Camera camera;
	private TelaCamera telaCam;
	private GoogleMap mapa;
	private Menu menu;
	private FrameLayout preview;

	private MenuItem buscaItem;
	private MenuItem cameraItem;
	private MenuItem mapItem;

	private LinearLayout mapaLayout;
	private LinearLayout cameraLayout;

	private ActionBarDrawerToggle mDrawerToggle;
	private DrawerLayout mDrawerLayout;
	private String[] itensMenu;
	private ListView mDrawerList;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_main);

		// Carrega Menu

		LayoutInflater inflater = (LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		View theInflatedView = inflater.inflate(R.layout.menu_lateral_layout, null);
		mDrawerLayout = (DrawerLayout) theInflatedView.findViewById(R.id.drawer_layout);
		mDrawerLayout.setDrawerShadow(R.drawable.drawer_shadow, GravityCompat.START);
		
		iniciaMenuBandeja();
		
		mDrawerList = (ListView) theInflatedView.findViewById(R.id.left_drawer);
		itensMenu = getResources().getStringArray(R.array.itensMenu);
		mDrawerList.setAdapter(new ArrayAdapter<String>(this, R.layout.item_menu, itensMenu));


		// Carrega Camera:

		cameraLayout = (LinearLayout) findViewById(R.id.layoutCamera);
		camera = Camera.open();
		Display display = ((WindowManager) getSystemService(WINDOW_SERVICE)).getDefaultDisplay();
		telaCam = new TelaCamera(this, camera, display);
		preview = (FrameLayout) findViewById(R.id.camera);
		preview.addView(telaCam);

		// Carrega Mapa:

		mapaLayout = (LinearLayout) findViewById(R.id.layoutMapa);
		if (mapa == null) {
			mapa = ((MapFragment) getFragmentManager().findFragmentById(R.id.map)).getMap();
		}
		mapa.getUiSettings().setZoomControlsEnabled(false);
		mapa.getUiSettings().setCompassEnabled(false);
		mapa.moveCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(-21.773746, -43.369301), 14.5f));
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		this.menu = menu;
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.main, menu);

		buscaItem = menu.findItem(R.id.action_search);
		cameraItem = menu.findItem(R.id.action_cam);
		mapItem = menu.findItem(R.id.action_map);

		SearchView busca = (SearchView) MenuItemCompat.getActionView(buscaItem);

		SearchManager manager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
		busca.setQueryHint("Onde?");

		// When using the support library, the setOnActionExpandListener()
		// method is
		// static and accepts the MenuItem object as an argument
		MenuItemCompat.setOnActionExpandListener(buscaItem, new OnActionExpandListener() {
			@Override
			public boolean onMenuItemActionCollapse(MenuItem item) {
				// Do something when collapsed
				cameraItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);
				mapItem.setShowAsAction(MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);
				cameraItem.setVisible(false);
				mapItem.setVisible(false);
				return true; // Return true to collapse action view
			}

			@Override
			public boolean onMenuItemActionExpand(MenuItem item) {
				// Do something when expanded

				return true; // Return true to expand action view
			}
		});

		return super.onCreateOptionsMenu(menu);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case R.id.action_search:
			// cameraItem.setVisible(false);
			// this.invalidateOptionsMenu();
			// mapItem.setVisible(false);
			// //.setShowAsAction(MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW);
			// BUSCA
			return true;
		case R.id.action_map:
			cameraLayout.setVisibility(View.GONE);
			cameraLayout.invalidate();
			mapaLayout.setVisibility(View.VISIBLE);
			return true;
		case R.id.action_cam:
			mapaLayout.setVisibility(View.GONE);
			mapaLayout.invalidate();
			cameraLayout.setVisibility(View.VISIBLE);
			preview.setVisibility(View.VISIBLE);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	private void iniciaMenuBandeja() {
		
		ActionBar actionBar = getActionBar();
		actionBar.setDisplayHomeAsUpEnabled(true);
		actionBar.setDisplayShowTitleEnabled(false);
		actionBar.setHomeButtonEnabled(true);

		// ActionBarDrawerToggle ties together the the proper interactions
		// between the navigation drawer and the action bar app icon.
		mDrawerToggle = new ActionBarDrawerToggle(this, /* host Activity */
		mDrawerLayout, /* DrawerLayout object */
		R.drawable.ic_navigation_drawer, /*
										 * nav drawer image to replace 'Up'
										 * caret
										 */
		R.string.navigation_drawer_open, /*
										 * "open drawer" description for
										 * accessibility
										 */
		R.string.navigation_drawer_close /*
										 * "close drawer" description for
										 * accessibility
										 */
		) {
			@Override
			public void onDrawerClosed(View drawerView) {
				super.onDrawerClosed(drawerView);
				invalidateOptionsMenu(); // calls onPrepareOptionsMenu()
			}

			@Override
			public void onDrawerOpened(View drawerView) {
				super.onDrawerOpened(drawerView);
				invalidateOptionsMenu(); // calls onPrepareOptionsMenu()
			}
		};

		// Defer code dependent on restoration of previous instance state.
		// NB: required for the drawer indicator to show up!
		mDrawerLayout.post(new Runnable() {
			@Override
			public void run() {
				mDrawerToggle.syncState();
			}
		});

		mDrawerLayout.setDrawerListener(mDrawerToggle);
	}
	
	  @Override
	    protected void onPostCreate(Bundle savedInstanceState) {
	        super.onPostCreate(savedInstanceState);
	        // Sync the toggle state after onRestoreInstanceState has occurred.
	        mDrawerToggle.syncState();
	    }
	

}